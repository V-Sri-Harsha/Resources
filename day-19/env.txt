= Template Engines ====
-- to develop server side app similar to PHP  - - EJS   Embedded Java Script
-- this helps to pass the data to the view - data from database  , something like ViewResolver in MVC
A template engine enables you to use static template files in your application. At runtime, the template engine replaces variables in a template file with actual values, and transforms the template into an HTML file sent to the client
 
1. create a new folder - a new project
2. md express2
3. cd express2
4. VSCode
5. npm init -y
 
6. terminal> npm install express ejs
 
7. create a new file /app.js
 
8. package.json
"main": "index.js",
"type":"module",    <===== for ES
"scripts": {
   "start": "node app",
   "dev": "node --watch app"
}
 
9. app.js
import express from 'express'
const app = express();
 
//Config EJS - Embedded Java Script
app.set('view engine', 'ejs');
app.set('views', 'views'); //second "views" is folder
 
app.get("/", (req, res) => {
   res.render('index')    ------ views/index.ejs    -- 
})
app.listen(5000, () => console.log('Server started'));
 
10. /views/index.ejs     --- basic HTML  !  
<h1> Welcome </h1>
 
11. terminal> npm run dev
 
in browser: http://localhost:5000
 
 
12 to pass dynamic data  - pass data from DB to view
res.render('index', {title: "Welcome", message: "Hello from EJS"})
 
13. to substitute the value in index.ejs
<%=title %>   -- similar to PHP
<h1><%= message %> </h1>
 
-- to pass array 
res.render('index', {
    title: "Welcome", 
    message: "Hello from EJS",
    people: ['John', 'Charles', 'Jack']
})
 
 
index.ejs
 
<h1> <%= message %> </h1>
<ul>
<%= people.forEach(person => { %> 
<li> <%=person %>
<%= }%>
</ul>